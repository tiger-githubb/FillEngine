#!/bin/bash

# Script de cr√©ation du package Chrome Store
# Usage: ./build-store-package.sh

echo "üöÄ Cr√©ation du package pour Chrome Web Store..."

# Cr√©er le dossier de build
BUILD_DIR="chrome-store-build"
PACKAGE_NAME="fillengine-v$(grep '"version"' ../manifest.json | cut -d'"' -f4).zip"

# Nettoyer le dossier de build s'il existe
if [ -d "$BUILD_DIR" ]; then
    echo "üßπ Nettoyage du dossier de build existant..."
    rm -rf "$BUILD_DIR"
fi

# Cr√©er le nouveau dossier de build
echo "üìÅ Cr√©ation du dossier de build..."
mkdir "$BUILD_DIR"

# Copier les fichiers essentiels
echo "üìã Copie des fichiers essentiels..."
cp ../manifest.json "$BUILD_DIR/"
cp ../background.js "$BUILD_DIR/"
cp ../content.js "$BUILD_DIR/"
cp ../popup.html "$BUILD_DIR/"
cp ../popup.js "$BUILD_DIR/"
cp ../example_data.csv "$BUILD_DIR/"
cp ../README.md "$BUILD_DIR/"
cp PRIVACY_POLICY.md "$BUILD_DIR/"

# Copier le dossier public avec les ic√¥nes
echo "üé® Copie des ic√¥nes..."
mkdir -p "$BUILD_DIR/public/icons"
cp ../public/icons/*.png "$BUILD_DIR/public/icons/"

# Copier la base de donn√©es des profils par d√©faut
cp ../data/profiles.csv "$BUILD_DIR/"

# V√©rifier que toutes les ic√¥nes requises sont pr√©sentes
echo "üîç V√©rification des ic√¥nes..."
REQUIRED_ICONS=("icon16.png" "icon32.png" "icon48.png" "icon128.png")
ICONS_OK=true

for icon in "${REQUIRED_ICONS[@]}"; do
    if [ -f "$BUILD_DIR/public/icons/$icon" ]; then
        echo "‚úÖ $icon"
    else
        echo "‚ùå MANQUANT: $icon"
        ICONS_OK=false
    fi
done

if [ "$ICONS_OK" = false ]; then
    echo "‚ùå Erreur: Des ic√¥nes sont manquantes. Arr√™t du processus."
    exit 1
fi

# Afficher les fichiers inclus
echo "üì¶ Fichiers inclus dans le package :"
find "$BUILD_DIR" -type f | sort

# Calculer la taille
TOTAL_SIZE=$(du -sh "$BUILD_DIR" | cut -f1)
echo "üìè Taille totale : $TOTAL_SIZE"

# Cr√©er le fichier ZIP
echo "üóúÔ∏è Cr√©ation du fichier ZIP..."
cd "$BUILD_DIR"
zip -r "../$PACKAGE_NAME" ./* -x "*.DS_Store*" "*.git*"
cd ..

# V√©rifier le ZIP cr√©√©
if [ -f "$PACKAGE_NAME" ]; then
    ZIP_SIZE=$(du -sh "$PACKAGE_NAME" | cut -f1)
    echo "‚úÖ Package cr√©√© avec succ√®s : $PACKAGE_NAME ($ZIP_SIZE)"
    echo ""
    echo "üìã √âtapes suivantes :"
    echo "1. Allez sur https://chrome.google.com/webstore/devconsole"
    echo "2. Cliquez 'Add new item'"
    echo "3. Uploadez le fichier : $PACKAGE_NAME"
    echo "4. Remplissez les informations marketing"
    echo "5. Soumettez pour r√©vision"
    echo ""
    echo "‚ö†Ô∏è N'oubliez pas :"
    echo "- Politique de confidentialit√© : $(pwd)/PRIVACY_POLICY.md"
    echo "- Screenshots √† cr√©er (1280x800px)"
    echo "- Description marketing √† r√©diger"
else
    echo "‚ùå Erreur lors de la cr√©ation du package"
    exit 1
fi

# Nettoyer le dossier de build
echo "üßπ Nettoyage..."
rm -rf "$BUILD_DIR"

echo "üéâ Processus termin√© !"
